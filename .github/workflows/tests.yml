name: CPU Test

permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

  schedule:
    # Every day at noon and midnight
    - cron: '0 0,12 * * *'

jobs:

  lint-fast:
    name: Lint - Fast
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: Sync dependencies
        run: uv sync --locked --group dev
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
      - name: Check Python headers
        run: |
          python scripts/check_python_headers.py
      - name: Run Black
        run: black --check .
      - name: Run isort
        run: isort --check-only .
      - name: Run pyright
        run: pyright -p pyrightconfig.fast.json

  lint-slow:
    name: Lint - Slow
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: Sync dependencies
        run: |
          uv sync --locked \
            --extra apo \
            --extra verl \
            --group dev \
            --group torch-cpu \
            --group torch-stable \
            --group trl \
            --group agents
      - name: Run Black
        run: black --check .
      - name: Run isort
        run: isort --check-only .
      - name: Run pyright
        run: pyright -p pyrightconfig.json

  docs:
    name: Build documentation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: Sync dependencies
        run: uv sync --locked --group dev
      - name: Set source commit for docs
        run: |
          echo "SOURCE_COMMIT=${{ github.sha }}" >> $GITHUB_ENV
      - name: Build documentation
        run: |
          mkdocs build --strict
      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation-site
          path: site/
          compression-level: 6

  test:
    strategy:
      matrix:
        include:
          - python-version: '3.10'
            setup-script: 'legacy'
          - python-version: '3.11'
            setup-script: 'stable'
          - python-version: '3.12'
            setup-script: 'stable'
          - python-version: '3.13'
            setup-script: 'latest'
      fail-fast: false

    name: Test with Python ${{ matrix.python-version }} (${{ matrix.setup-script }})
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: Check versions
        run: ./scripts/check_python_install.sh
      - name: Upgrade dependencies (latest)
        run: uv lock --upgrade
        if: matrix.setup-script == 'latest'
      - name: Sync dependencies (${{ matrix.setup-script }})
        run: uv sync --locked --extra apo --group dev --group agents --group core-${{ matrix.setup-script }}
      - name: Freeze dependencies
        run: |
          pip list | tee requirements-freeze-${{ matrix.python-version }}-${{ matrix.setup-script }}.txt
      - name: Upload dependencies artifact
        uses: actions/upload-artifact@v4
        with:
          name: dependencies-python-${{ matrix.python-version }}-${{ matrix.setup-script }}
          path: requirements-freeze-${{ matrix.python-version }}-${{ matrix.setup-script }}.txt
          compression-level: 0
      - name: Run tests
        run: |
          pytest -v --durations=0 tests
        env:
          PYTEST_ADDOPTS: "--color=yes"
